diff -Naur multicoreware-x265_git-8ee01d45b05c.old/source/common/param.cpp multicoreware-x265_git-8ee01d45b05c/source/common/param.cpp
--- multicoreware-x265_git-8ee01d45b05c.old/source/common/param.cpp	2023-09-17 04:57:20.000000000 +0200
+++ multicoreware-x265_git-8ee01d45b05c/source/common/param.cpp	2023-09-30 09:17:05.469284428 +0200
@@ -378,6 +378,7 @@
     param->preferredTransferCharacteristics = -1;
     param->pictureStructure = -1;
     param->bEmitCLL = 1;
+    param->bEmitAmbientViewingEnvironment = 0;
 
     param->bEnableFrameDuplication = 0;
     param->dupThreshold = 70;
@@ -1880,6 +1881,7 @@
                      || param->bEmitIDRRecoverySEI
                    || !!param->interlaceMode
                      || param->preferredTransferCharacteristics > 1
+                     || param->bEmitAmbientViewingEnvironment
                      || param->toneMapFile
                      || param->naluFile);
 
@@ -2768,6 +2770,10 @@
     dst->bEmitCLL = src->bEmitCLL;
     dst->maxCLL = src->maxCLL;
     dst->maxFALL = src->maxFALL;
+    dst->ambientIlluminance = src->ambientIlluminance;
+    dst->ambientLightX = src->ambientLightX;
+    dst->ambientLightY = src->ambientLightY;
+    dst->bEmitAmbientViewingEnvironment = src->bEmitAmbientViewingEnvironment;
     dst->log2MaxPocLsb = src->log2MaxPocLsb;
     dst->bEmitVUIHRDInfo = src->bEmitVUIHRDInfo;
     dst->bEmitVUITimingInfo = src->bEmitVUITimingInfo;
diff -Naur multicoreware-x265_git-8ee01d45b05c.old/source/encoder/encoder.cpp multicoreware-x265_git-8ee01d45b05c/source/encoder/encoder.cpp
--- multicoreware-x265_git-8ee01d45b05c.old/source/encoder/encoder.cpp	2023-09-30 09:16:59.291172950 +0200
+++ multicoreware-x265_git-8ee01d45b05c/source/encoder/encoder.cpp	2023-09-30 09:17:05.471284464 +0200
@@ -3282,6 +3282,15 @@
         }
     }
 
+    if (m_param->bEmitAmbientViewingEnvironment)
+    {
+        SEIAmbientViewingEnvironment ambientsei;
+        ambientsei.ambientIlluminance = m_param->ambientIlluminance;
+        ambientsei.ambientLightX = m_param->ambientLightX;
+        ambientsei.ambientLightY = m_param->ambientLightY;
+        ambientsei.writeSEImessages(bs, m_sps, NAL_UNIT_PREFIX_SEI, list, m_param->bSingleSeiNal);
+    }
+
     if (m_param->bEmitInfoSEI)
     {
         char *opts = x265_param2string(m_param, m_sps.conformanceWindow.rightOffset, m_sps.conformanceWindow.bottomOffset);
diff -Naur multicoreware-x265_git-8ee01d45b05c.old/source/encoder/sei.h multicoreware-x265_git-8ee01d45b05c/source/encoder/sei.h
--- multicoreware-x265_git-8ee01d45b05c.old/source/encoder/sei.h	2023-09-17 04:57:20.000000000 +0200
+++ multicoreware-x265_git-8ee01d45b05c/source/encoder/sei.h	2023-09-30 09:17:05.471284464 +0200
@@ -242,6 +242,25 @@
     }
 };
 
+class SEIAmbientViewingEnvironment : public SEI
+{
+public:
+    SEIAmbientViewingEnvironment()
+    {
+        m_payloadType = AMBIENT_VIEWING_ENVIRONMENT;
+        m_payloadSize = 8;
+    }
+    uint32_t ambientIlluminance;
+    uint16_t ambientLightX;
+    uint16_t ambientLightY;
+    void writeSEI(const SPS&)
+    {
+        WRITE_CODE(ambientIlluminance, 32, "ambient_illuminance");
+        WRITE_CODE(ambientLightX,      16, "ambient_light_x");
+        WRITE_CODE(ambientLightY,      16, "ambient_light_y");
+    }
+};
+
 class SEIDecodedPictureHash : public SEI
 {
 public:
diff -Naur multicoreware-x265_git-8ee01d45b05c.old/source/x265.h multicoreware-x265_git-8ee01d45b05c/source/x265.h
--- multicoreware-x265_git-8ee01d45b05c.old/source/x265.h	2023-09-17 04:57:20.000000000 +0200
+++ multicoreware-x265_git-8ee01d45b05c/source/x265.h	2023-09-30 09:17:05.472284482 +0200
@@ -371,6 +371,7 @@
     MASTERING_DISPLAY_INFO               = 137,
     CONTENT_LIGHT_LEVEL_INFO             = 144,
     ALTERNATIVE_TRANSFER_CHARACTERISTICS = 147,
+    AMBIENT_VIEWING_ENVIRONMENT          = 148,
 } SEIPayloadType;
 
 typedef struct x265_sei_payload
@@ -1906,6 +1907,11 @@
      * value to that value. */
     uint16_t maxLuma;
 
+    /* ISO/IEC 23008-2:2017, D.2.39 ambient viewing environment SEI message */
+    uint32_t ambientIlluminance;
+    uint16_t ambientLightX;
+    uint16_t ambientLightY;
+
     /* Maximum of the picture order count */
     int log2MaxPocLsb;
 
@@ -2117,6 +2123,9 @@
     /*Emit content light level info SEI*/
     int         bEmitCLL;
 
+    /* Emit ambient viewing environment SEI */
+    int         bEmitAmbientViewingEnvironment;
+
     /*
     * Signals picture structure SEI timing message for every frame
     * picture structure 7 is signalled for frame doubling
